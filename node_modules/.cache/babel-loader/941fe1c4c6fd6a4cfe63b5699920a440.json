{"ast":null,"code":"import _slicedToArray from\"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectWithoutProperties from\"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"ticksSpring\",\"clickSpring\",\"duration\"];import React,{useMemo,useRef,useState}from'react';import{Canvas,useFrame}from'react-three-fiber';import{Effects}from'./Effects';import{useSpring}from'@react-spring/three';import{ResizeObserver}from'@juggle/resize-observer';import*as THREE from'three';// INTERACTIVE VERSION\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var roundedSquareWave=function roundedSquareWave(t){var delta=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.1;var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var f=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1/10;// Equation from https://dsp.stackexchange.com/a/56529\n// Visualized here https://www.desmos.com/calculator/uakymahh4u\nreturn 2*a/Math.PI*Math.atan(Math.sin(2*Math.PI*t*f)/delta);};function Dots(_ref){var ticksSpring=_ref.ticksSpring,clickSpring=_ref.clickSpring,duration=_ref.duration,props=_objectWithoutProperties(_ref,_excluded);var ref=useRef();// Reference to our InstancedMesh\nvar _useMemo=useMemo(function(){// Variables for intermediary calculations\nvar vec=new THREE.Vector3();var transform=new THREE.Matrix4();// Vector pointing to the right (for angle calculations)\nvar right=new THREE.Vector3(1,0,0);// True cursor position in 3D space\nvar vec3Mouse=new THREE.Vector3();// Where the dots are clustered around\nvar focus=new THREE.Vector3();// Precompute randomized initial positions (array of Vector3)\nvar positions=_toConsumableArray(Array(10000)).map(function(_,i){var position=new THREE.Vector3();// Place in a grid\nposition.x=i%100-50;position.y=Math.floor(i/100)-50;// Offset every other column (hexagonal pattern)\nposition.y+=i%2*0.5;// Add some noise\nposition.x+=Math.random()*0.3;position.y+=Math.random()*0.3;return position;});return{vec:vec,right:right,transform:transform,vec3Mouse:vec3Mouse,focus:focus,positions:positions};},[]),vec=_useMemo.vec,right=_useMemo.right,transform=_useMemo.transform,vec3Mouse=_useMemo.vec3Mouse,focus=_useMemo.focus,positions=_useMemo.positions;useFrame(function(_ref2){var mouse=_ref2.mouse,viewport=_ref2.viewport;// Convert mouse screen coords to 3D scene coords\nvec3Mouse.x=mouse.x*viewport.width/2;vec3Mouse.y=mouse.y*viewport.height/2;for(var i=0;i<10000;++i){// Drift focus to center as click is released\nfocus.copy(vec3Mouse).multiplyScalar(clickSpring.get());// Vec holds the dot position relative to the focus point\nvec.copy(positions[i]).sub(focus);// Same distance calculation as original demo\nvar dist=vec.length()+Math.cos(vec.angleTo(right)*8)*0.5;// This adjusts the wave input to set a suitable phase and frequency\nvar t=ticksSpring.get()/2+1/2-dist/100;var wave=roundedSquareWave(t,0.15+0.2*dist/72,0.4,1);// Scale dot position relative to the focus point\nvec.multiplyScalar(wave+1.3).add(focus);// Set the instance's transformation matrix\ntransform.setPosition(vec);ref.current.setMatrixAt(i,transform);}ref.current.instanceMatrix.needsUpdate=true;});return/*#__PURE__*/_jsxs(\"instancedMesh\",_objectSpread(_objectSpread({args:[null,null,10000],ref:ref},props),{},{children:[/*#__PURE__*/_jsx(\"circleBufferGeometry\",{args:[0.15,8]}),/*#__PURE__*/_jsx(\"meshBasicMaterial\",{color:'white'})]}));}export default function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),ticks=_useState2[0],setTicks=_useState2[1];var _useSpring=useSpring({ticksSpring:ticks,// Springy tick value (each click / release is a tick)\nclickSpring:ticks%2===1?1:0,// Springy click factor (1 means clicked, 0 means released)\nconfig:{tension:20,friction:20,clamp:true}}),ticksSpring=_useSpring.ticksSpring,clickSpring=_useSpring.clickSpring;var bind={onPointerDown:function onPointerDown(e){// Capture the pointer so it's still tracked outside the window\ne.target.setPointerCapture(e.pointerId);setTicks(ticks+1);},onPointerUp:function onPointerUp(){// Prevent misfires\nif(ticks%2===1){// Only finish the animation if held down for long enough\nif(clickSpring.get()>0.5)setTicks(ticks+1);// Otherwise undo the contraction (this way you can't speed up the animation by spam clicking)\nelse setTicks(ticks-1);}}};return/*#__PURE__*/_jsxs(Canvas,_objectSpread(_objectSpread({orthographic:true,colorManagement:false,camera:{position:[0,0,100],zoom:20},resize:{polyfill:ResizeObserver}// Allows @react-spring/three to work in Safari\n},bind),{},{children:[/*#__PURE__*/_jsx(\"color\",{attach:\"background\",args:['black']}),/*#__PURE__*/_jsx(Dots,{ticksSpring:ticksSpring,clickSpring:clickSpring,duration:3.8}),/*#__PURE__*/_jsx(Effects,{})]}));}","map":{"version":3,"names":["React","useMemo","useRef","useState","Canvas","useFrame","Effects","useSpring","ResizeObserver","THREE","jsx","_jsx","jsxs","_jsxs","roundedSquareWave","t","delta","arguments","length","undefined","a","f","Math","PI","atan","sin","Dots","_ref","ticksSpring","clickSpring","duration","props","_objectWithoutProperties","_excluded","ref","_useMemo","vec","Vector3","transform","Matrix4","right","vec3Mouse","focus","positions","_toConsumableArray","Array","map","_","i","position","x","y","floor","random","_ref2","mouse","viewport","width","height","copy","multiplyScalar","get","sub","dist","cos","angleTo","wave","add","setPosition","current","setMatrixAt","instanceMatrix","needsUpdate","_objectSpread","args","children","color","App","_useState","_useState2","_slicedToArray","ticks","setTicks","_useSpring","config","tension","friction","clamp","bind","onPointerDown","e","target","setPointerCapture","pointerId","onPointerUp","orthographic","colorManagement","camera","zoom","resize","polyfill","attach"],"sources":["/Users/jphenessey/code/minisite/src/demos/Demo2.js"],"sourcesContent":["import React, { useMemo, useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { Effects } from './Effects'\nimport { useSpring } from '@react-spring/three'\nimport { ResizeObserver } from '@juggle/resize-observer'\nimport * as THREE from 'three'\n\n// INTERACTIVE VERSION\n\nconst roundedSquareWave = (t, delta = 0.1, a = 1, f = 1 / 10) => {\n  // Equation from https://dsp.stackexchange.com/a/56529\n  // Visualized here https://www.desmos.com/calculator/uakymahh4u\n  return ((2 * a) / Math.PI) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta)\n}\n\nfunction Dots({ ticksSpring, clickSpring, duration, ...props }) {\n  const ref = useRef() // Reference to our InstancedMesh\n  const { vec, right, transform, vec3Mouse, focus, positions } = useMemo(() => {\n    // Variables for intermediary calculations\n    const vec = new THREE.Vector3()\n    const transform = new THREE.Matrix4()\n\n    // Vector pointing to the right (for angle calculations)\n    const right = new THREE.Vector3(1, 0, 0)\n\n    // True cursor position in 3D space\n    const vec3Mouse = new THREE.Vector3()\n\n    // Where the dots are clustered around\n    const focus = new THREE.Vector3()\n\n    // Precompute randomized initial positions (array of Vector3)\n    const positions = [...Array(10000)].map((_, i) => {\n      const position = new THREE.Vector3()\n\n      // Place in a grid\n      position.x = (i % 100) - 50\n      position.y = Math.floor(i / 100) - 50\n\n      // Offset every other column (hexagonal pattern)\n      position.y += (i % 2) * 0.5\n\n      // Add some noise\n      position.x += Math.random() * 0.3\n      position.y += Math.random() * 0.3\n      return position\n    })\n    return { vec, right, transform, vec3Mouse, focus, positions }\n  }, [])\n  useFrame(({ mouse, viewport }) => {\n    // Convert mouse screen coords to 3D scene coords\n    vec3Mouse.x = (mouse.x * viewport.width) / 2\n    vec3Mouse.y = (mouse.y * viewport.height) / 2\n\n    for (let i = 0; i < 10000; ++i) {\n      // Drift focus to center as click is released\n      focus.copy(vec3Mouse).multiplyScalar(clickSpring.get())\n\n      // Vec holds the dot position relative to the focus point\n      vec.copy(positions[i]).sub(focus)\n\n      // Same distance calculation as original demo\n      const dist = vec.length() + Math.cos(vec.angleTo(right) * 8) * 0.5\n\n      // This adjusts the wave input to set a suitable phase and frequency\n      const t = ticksSpring.get() / 2 + 1 / 2 - dist / 100\n      const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1)\n\n      // Scale dot position relative to the focus point\n      vec.multiplyScalar(wave + 1.3).add(focus)\n\n      // Set the instance's transformation matrix\n      transform.setPosition(vec)\n      ref.current.setMatrixAt(i, transform)\n    }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n  return (\n    <instancedMesh args={[null, null, 10000]} ref={ref} {...props}>\n      <circleBufferGeometry args={[0.15, 8]} />\n      <meshBasicMaterial color={'white'} />\n    </instancedMesh>\n  )\n}\n\nexport default function App() {\n  const [ticks, setTicks] = useState(0)\n  const { ticksSpring, clickSpring } = useSpring({\n    ticksSpring: ticks, // Springy tick value (each click / release is a tick)\n    clickSpring: ticks % 2 === 1 ? 1 : 0, // Springy click factor (1 means clicked, 0 means released)\n    config: { tension: 20, friction: 20, clamp: true }\n  })\n  const bind = {\n    onPointerDown: (e) => {\n      // Capture the pointer so it's still tracked outside the window\n      e.target.setPointerCapture(e.pointerId)\n      setTicks(ticks + 1)\n    },\n    onPointerUp: () => {\n      // Prevent misfires\n      if (ticks % 2 === 1) {\n        // Only finish the animation if held down for long enough\n        if (clickSpring.get() > 0.5) setTicks(ticks + 1)\n        // Otherwise undo the contraction (this way you can't speed up the animation by spam clicking)\n        else setTicks(ticks - 1)\n      }\n    }\n  }\n  return (\n    <Canvas\n      orthographic\n      colorManagement={false}\n      camera={{ position: [0, 0, 100], zoom: 20 }}\n      resize={{ polyfill: ResizeObserver }}  // Allows @react-spring/three to work in Safari\n      {...bind}\n    >\n      <color attach=\"background\" args={['black']} />\n      <Dots ticksSpring={ticksSpring} clickSpring={clickSpring} duration={3.8} />\n      <Effects />\n    </Canvas>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
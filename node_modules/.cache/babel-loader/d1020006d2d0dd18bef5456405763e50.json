{"ast":null,"code":"import { Pass } from \"../postprocessing/Pass.js\";\nvar RenderPass = function RenderPass(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.overrideMaterial = overrideMaterial;\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n};\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: RenderPass,\n  render: function render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    var oldClearColor, oldClearAlpha, oldOverrideMaterial;\n    if (this.overrideMaterial !== undefined) {\n      oldOverrideMaterial = this.scene.overrideMaterial;\n      this.scene.overrideMaterial = this.overrideMaterial;\n    }\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex();\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n\n    // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\n    }\n    if (this.overrideMaterial !== undefined) {\n      this.scene.overrideMaterial = oldOverrideMaterial;\n    }\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { RenderPass };","map":{"version":3,"names":["Pass","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","call","undefined","clear","clearDepth","needsSwap","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldClearColor","oldClearAlpha","oldOverrideMaterial","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"sources":["/Users/jphenessey/code/minisite/node_modules/three/examples/jsm/postprocessing/RenderPass.js"],"sourcesContent":["import { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,2BAA2B;AAEhD,IAAIC,UAAU,GAAG,SAAbA,UAAUA,CAAcC,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,UAAU,EAAG;EAErFN,IAAI,CAACO,IAAI,CAAE,IAAI,CAAE;EAEjB,IAAI,CAACL,KAAK,GAAGA,KAAK;EAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EAEpB,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EAExC,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,UAAU,GAAKA,UAAU,KAAKE,SAAS,GAAKF,UAAU,GAAG,CAAC;EAE/D,IAAI,CAACG,KAAK,GAAG,IAAI;EACjB,IAAI,CAACC,UAAU,GAAG,KAAK;EACvB,IAAI,CAACC,SAAS,GAAG,KAAK;AAEvB,CAAC;AAEDV,UAAU,CAACW,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAED,MAAM,CAACE,MAAM,CAAEf,IAAI,CAACY,SAAS,CAAE,EAAE;EAEtEI,WAAW,EAAEf,UAAU;EAEvBgB,MAAM,EAAE,SAAAA,OAAWC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,CAAC,8BAA+B;IAEnF,IAAIC,YAAY,GAAGH,QAAQ,CAACI,SAAS;IACrCJ,QAAQ,CAACI,SAAS,GAAG,KAAK;IAE1B,IAAIC,aAAa,EAAEC,aAAa,EAAEC,mBAAmB;IAErD,IAAK,IAAI,CAACrB,gBAAgB,KAAKI,SAAS,EAAG;MAE1CiB,mBAAmB,GAAG,IAAI,CAACvB,KAAK,CAACE,gBAAgB;MAEjD,IAAI,CAACF,KAAK,CAACE,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;IAEpD;IAEA,IAAK,IAAI,CAACC,UAAU,EAAG;MAEtBkB,aAAa,GAAGL,QAAQ,CAACQ,aAAa,EAAE,CAACC,MAAM,EAAE;MACjDH,aAAa,GAAGN,QAAQ,CAACU,aAAa,EAAE;MAExCV,QAAQ,CAACW,aAAa,CAAE,IAAI,CAACxB,UAAU,EAAE,IAAI,CAACC,UAAU,CAAE;IAE3D;IAEA,IAAK,IAAI,CAACI,UAAU,EAAG;MAEtBQ,QAAQ,CAACR,UAAU,EAAE;IAEtB;IAEAQ,QAAQ,CAACY,eAAe,CAAE,IAAI,CAACC,cAAc,GAAG,IAAI,GAAGX,UAAU,CAAE;;IAEnE;IACA,IAAK,IAAI,CAACX,KAAK,EAAGS,QAAQ,CAACT,KAAK,CAAES,QAAQ,CAACc,cAAc,EAAEd,QAAQ,CAACe,cAAc,EAAEf,QAAQ,CAACgB,gBAAgB,CAAE;IAC/GhB,QAAQ,CAACD,MAAM,CAAE,IAAI,CAACf,KAAK,EAAE,IAAI,CAACC,MAAM,CAAE;IAE1C,IAAK,IAAI,CAACE,UAAU,EAAG;MAEtBa,QAAQ,CAACW,aAAa,CAAEN,aAAa,EAAEC,aAAa,CAAE;IAEvD;IAEA,IAAK,IAAI,CAACpB,gBAAgB,KAAKI,SAAS,EAAG;MAE1C,IAAI,CAACN,KAAK,CAACE,gBAAgB,GAAGqB,mBAAmB;IAElD;IAEAP,QAAQ,CAACI,SAAS,GAAGD,YAAY;EAElC;AAED,CAAC,CAAE;AAEH,SAASpB,UAAU"},"metadata":{},"sourceType":"module"}
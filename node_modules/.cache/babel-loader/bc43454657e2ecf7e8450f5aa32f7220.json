{"ast":null,"code":"import*as THREE from'three';import React,{useMemo,useEffect,useRef}from'react';import{useThree,useFrame,extend}from'react-three-fiber';import{EffectComposer}from'three/examples/jsm/postprocessing/EffectComposer';import{ShaderPass}from'three/examples/jsm/postprocessing/ShaderPass';import{SavePass}from'three/examples/jsm/postprocessing/SavePass';import{CopyShader}from'three/examples/jsm/shaders/CopyShader';import{FXAAShader}from'three/examples/jsm/shaders/FXAAShader';import{RenderPass}from'three/examples/jsm/postprocessing/RenderPass';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";extend({EffectComposer:EffectComposer,ShaderPass:ShaderPass,SavePass:SavePass,RenderPass:RenderPass});// Shader that composites the r,g,b channels of 3 textures, respectively\nvar triColorMix={uniforms:{tDiffuse1:{value:null},tDiffuse2:{value:null},tDiffuse3:{value:null}},vertexShader:\"\\n    varying vec2 vUv;\\n    void main() {\\n      vUv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\\n    }\\n  \",fragmentShader:\"\\n    varying vec2 vUv;\\n    uniform sampler2D tDiffuse1;\\n    uniform sampler2D tDiffuse2;\\n    uniform sampler2D tDiffuse3;\\n    \\n    void main() {\\n      vec4 del0 = texture2D(tDiffuse1, vUv);\\n      vec4 del1 = texture2D(tDiffuse2, vUv);\\n      vec4 del2 = texture2D(tDiffuse3, vUv);\\n      // min alpha hides until all buffers are full\\n      float alpha = min(min(del0.a, del1.a), del2.a);\\n      gl_FragColor = vec4(del0.r, del1.g, del2.b, alpha);\\n    }\\n  \"};export function Effects(){var composer=useRef();var savePass=useRef();var blendPass=useRef();var swap=useRef(false);// Whether we need to swap the delay buffers\nvar _useThree=useThree(),scene=_useThree.scene,gl=_useThree.gl,size=_useThree.size,camera=_useThree.camera;var _useMemo=useMemo(function(){// Spare render targets for holding the previous two individual frames\nvar rtA=new THREE.WebGLRenderTarget(size.width,size.height);var rtB=new THREE.WebGLRenderTarget(size.width,size.height);return{rtA:rtA,rtB:rtB};},[size]),rtA=_useMemo.rtA,rtB=_useMemo.rtB;var pixelRatio=gl.getPixelRatio();// Needed for anti-aliasing pass\nuseEffect(function(){return void composer.current.setSize(size.width,size.height);},[size]);useFrame(function(){composer.current.render();// Swap render targets and update dependencies\nvar delay1=swap.current?rtB:rtA;var delay2=swap.current?rtA:rtB;savePass.current.renderTarget=delay2;blendPass.current.uniforms['tDiffuse2'].value=delay1.texture;blendPass.current.uniforms['tDiffuse3'].value=delay2.texture;swap.current=!swap.current;},1);return/*#__PURE__*/_jsxs(\"effectComposer\",{ref:composer,args:[gl],children:[/*#__PURE__*/_jsx(\"renderPass\",{attachArray:\"passes\",scene:scene,camera:camera}),/*#__PURE__*/_jsx(\"shaderPass\",{attachArray:\"passes\",ref:blendPass,args:[triColorMix,'tDiffuse1'],needsSwap:false}),/*#__PURE__*/_jsx(\"savePass\",{attachArray:\"passes\",ref:savePass,needsSwap:true}),/*#__PURE__*/_jsx(\"shaderPass\",{attachArray:\"passes\",args:[FXAAShader],\"uniforms-resolution-value-x\":1/(size.width*pixelRatio),\"uniforms-resolution-value-y\":1/(size.height*pixelRatio)}),/*#__PURE__*/_jsx(\"shaderPass\",{attachArray:\"passes\",args:[CopyShader]})]});}","map":{"version":3,"names":["THREE","React","useMemo","useEffect","useRef","useThree","useFrame","extend","EffectComposer","ShaderPass","SavePass","CopyShader","FXAAShader","RenderPass","jsx","_jsx","jsxs","_jsxs","triColorMix","uniforms","tDiffuse1","value","tDiffuse2","tDiffuse3","vertexShader","fragmentShader","Effects","composer","savePass","blendPass","swap","_useThree","scene","gl","size","camera","_useMemo","rtA","WebGLRenderTarget","width","height","rtB","pixelRatio","getPixelRatio","current","setSize","render","delay1","delay2","renderTarget","texture","ref","args","children","attachArray","needsSwap"],"sources":["/Users/jphenessey/code/minisite/src/demos/Effects.js"],"sourcesContent":["import * as THREE from 'three'\r\nimport React, { useMemo, useEffect, useRef } from 'react'\r\nimport { useThree, useFrame, extend } from 'react-three-fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass'\r\nimport { CopyShader } from 'three/examples/jsm/shaders/CopyShader'\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\n\r\nextend({ EffectComposer, ShaderPass, SavePass, RenderPass })\r\n\r\n// Shader that composites the r,g,b channels of 3 textures, respectively\r\nconst triColorMix = {\r\n  uniforms: {\r\n    tDiffuse1: { value: null },\r\n    tDiffuse2: { value: null },\r\n    tDiffuse3: { value: null }\r\n  },\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\r\n    }\r\n  `,\r\n  fragmentShader: `\r\n    varying vec2 vUv;\r\n    uniform sampler2D tDiffuse1;\r\n    uniform sampler2D tDiffuse2;\r\n    uniform sampler2D tDiffuse3;\r\n    \r\n    void main() {\r\n      vec4 del0 = texture2D(tDiffuse1, vUv);\r\n      vec4 del1 = texture2D(tDiffuse2, vUv);\r\n      vec4 del2 = texture2D(tDiffuse3, vUv);\r\n      // min alpha hides until all buffers are full\r\n      float alpha = min(min(del0.a, del1.a), del2.a);\r\n      gl_FragColor = vec4(del0.r, del1.g, del2.b, alpha);\r\n    }\r\n  `\r\n}\r\n\r\nexport function Effects() {\r\n  const composer = useRef()\r\n  const savePass = useRef()\r\n  const blendPass = useRef()\r\n  const swap = useRef(false) // Whether we need to swap the delay buffers\r\n  const { scene, gl, size, camera } = useThree()\r\n  const { rtA, rtB } = useMemo(() => {\r\n    // Spare render targets for holding the previous two individual frames\r\n    const rtA = new THREE.WebGLRenderTarget(size.width, size.height)\r\n    const rtB = new THREE.WebGLRenderTarget(size.width, size.height)\r\n    return { rtA, rtB }\r\n  }, [size])\r\n  const pixelRatio = gl.getPixelRatio() // Needed for anti-aliasing pass\r\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\r\n  useFrame(() => {\r\n    composer.current.render()\r\n    // Swap render targets and update dependencies\r\n    let delay1 = swap.current ? rtB : rtA\r\n    let delay2 = swap.current ? rtA : rtB\r\n    savePass.current.renderTarget = delay2\r\n    blendPass.current.uniforms['tDiffuse2'].value = delay1.texture\r\n    blendPass.current.uniforms['tDiffuse3'].value = delay2.texture\r\n    swap.current = !swap.current\r\n  }, 1)\r\n  return (\r\n    <effectComposer ref={composer} args={[gl]}>\r\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\r\n      <shaderPass attachArray=\"passes\" ref={blendPass} args={[triColorMix, 'tDiffuse1']} needsSwap={false} />\r\n      <savePass attachArray=\"passes\" ref={savePass} needsSwap={true} />\r\n      <shaderPass\r\n        attachArray=\"passes\"\r\n        args={[FXAAShader]}\r\n        uniforms-resolution-value-x={1 / (size.width * pixelRatio)}\r\n        uniforms-resolution-value-y={1 / (size.height * pixelRatio)}\r\n      />\r\n      <shaderPass attachArray=\"passes\" args={[CopyShader]} />\r\n    </effectComposer>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
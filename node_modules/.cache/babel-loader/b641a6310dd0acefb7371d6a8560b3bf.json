{"ast":null,"code":"import _classCallCheck from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ShaderMaterial, UniformsUtils, WebGLRenderTarget } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\nvar SavePass = /*#__PURE__*/function (_Pass) {\n  _inherits(SavePass, _Pass);\n  var _super = _createSuper(SavePass);\n  function SavePass(renderTarget) {\n    var _this;\n    _classCallCheck(this, SavePass);\n    _this = _super.call(this);\n    var shader = CopyShader;\n    _this.textureID = 'tDiffuse';\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    _this.renderTarget = renderTarget;\n    if (_this.renderTarget === undefined) {\n      _this.renderTarget = new WebGLRenderTarget(); // will be resized later\n      _this.renderTarget.texture.name = 'SavePass.rt';\n    }\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(SavePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      renderer.setRenderTarget(this.renderTarget);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.renderTarget.setSize(width, height);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderTarget.dispose();\n      this.material.dispose();\n      this.fsQuad.dispose();\n    }\n  }]);\n  return SavePass;\n}(Pass);\nexport { SavePass };","map":{"version":3,"names":["ShaderMaterial","UniformsUtils","WebGLRenderTarget","Pass","FullScreenQuad","CopyShader","SavePass","_Pass","_inherits","_super","_createSuper","renderTarget","_this","_classCallCheck","call","shader","textureID","uniforms","clone","material","vertexShader","fragmentShader","undefined","texture","name","needsSwap","fsQuad","_createClass","key","value","render","renderer","writeBuffer","readBuffer","setRenderTarget","clear","setSize","width","height","dispose"],"sources":["/Users/jphenessey/code/minisite/node_modules/three/examples/jsm/postprocessing/SavePass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\n\nclass SavePass extends Pass {\n\n\tconstructor( renderTarget ) {\n\n\t\tsuper();\n\n\t\tconst shader = CopyShader;\n\n\t\tthis.textureID = 'tDiffuse';\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tif ( this.renderTarget === undefined ) {\n\n\t\t\tthis.renderTarget = new WebGLRenderTarget(); // will be resized later\n\t\t\tthis.renderTarget.texture.name = 'SavePass.rt';\n\n\t\t}\n\n\t\tthis.needsSwap = false;\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderTarget );\n\t\tif ( this.clear ) renderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis.renderTarget.setSize( width, height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTarget.dispose();\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { SavePass };\n"],"mappings":";;;;AAAA,SACCA,cAAc,EACdC,aAAa,EACbC,iBAAiB,QACX,OAAO;AACd,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,UAAU,QAAQ,0BAA0B;AAAC,IAEhDC,QAAQ,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EAEb,SAAAA,SAAaK,YAAY,EAAG;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,QAAA;IAE3BM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IAEA,IAAMC,MAAM,GAAGV,UAAU;IAEzBO,KAAA,CAAKI,SAAS,GAAG,UAAU;IAE3BJ,KAAA,CAAKK,QAAQ,GAAGhB,aAAa,CAACiB,KAAK,CAAEH,MAAM,CAACE,QAAQ,CAAE;IAEtDL,KAAA,CAAKO,QAAQ,GAAG,IAAInB,cAAc,CAAE;MAEnCiB,QAAQ,EAAEL,KAAA,CAAKK,QAAQ;MACvBG,YAAY,EAAEL,MAAM,CAACK,YAAY;MACjCC,cAAc,EAAEN,MAAM,CAACM;IAExB,CAAC,CAAE;IAEHT,KAAA,CAAKD,YAAY,GAAGA,YAAY;IAEhC,IAAKC,KAAA,CAAKD,YAAY,KAAKW,SAAS,EAAG;MAEtCV,KAAA,CAAKD,YAAY,GAAG,IAAIT,iBAAiB,EAAE,CAAC,CAAC;MAC7CU,KAAA,CAAKD,YAAY,CAACY,OAAO,CAACC,IAAI,GAAG,aAAa;IAE/C;IAEAZ,KAAA,CAAKa,SAAS,GAAG,KAAK;IAEtBb,KAAA,CAAKc,MAAM,GAAG,IAAItB,cAAc,CAAEQ,KAAA,CAAKO,QAAQ,CAAE;IAAC,OAAAP,KAAA;EAEnD;EAACe,YAAA,CAAArB,QAAA;IAAAsB,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAQC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,+BAA+B;MAEvE,IAAK,IAAI,CAAChB,QAAQ,CAAE,IAAI,CAACD,SAAS,CAAE,EAAG;QAEtC,IAAI,CAACC,QAAQ,CAAE,IAAI,CAACD,SAAS,CAAE,CAACa,KAAK,GAAGI,UAAU,CAACV,OAAO;MAE3D;MAEAQ,QAAQ,CAACG,eAAe,CAAE,IAAI,CAACvB,YAAY,CAAE;MAC7C,IAAK,IAAI,CAACwB,KAAK,EAAGJ,QAAQ,CAACI,KAAK,EAAE;MAClC,IAAI,CAACT,MAAM,CAACI,MAAM,CAAEC,QAAQ,CAAE;IAE/B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAO,QAASC,KAAK,EAAEC,MAAM,EAAG;MAExB,IAAI,CAAC3B,YAAY,CAACyB,OAAO,CAAEC,KAAK,EAAEC,MAAM,CAAE;IAE3C;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAU,QAAA,EAAU;MAET,IAAI,CAAC5B,YAAY,CAAC4B,OAAO,EAAE;MAE3B,IAAI,CAACpB,QAAQ,CAACoB,OAAO,EAAE;MAEvB,IAAI,CAACb,MAAM,CAACa,OAAO,EAAE;IAEtB;EAAC;EAAA,OAAAjC,QAAA;AAAA,EA/DqBH,IAAI;AAmE3B,SAASG,QAAQ"},"metadata":{},"sourceType":"module"}
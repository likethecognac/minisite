{"ast":null,"code":"import _toConsumableArray from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/Users/jphenessey/code/minisite/src/demos/Demo1.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { Effects } from './Effects';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport * as THREE from 'three';\n\n// NON-INTERACTIVE VERSION\n\n// Equation from https://dsp.stackexchange.com/a/56529\n// Visualized here https://www.desmos.com/calculator/uakymahh4u\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar roundedSquareWave = function roundedSquareWave(t, delta, a, f) {\n  return 2 * a / Math.PI * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\nfunction Dots() {\n  _s();\n  var ref = useRef(); // Reference to our InstancedMesh\n  var _useMemo = useMemo(function () {\n      // Variables for intermediary calculations\n      var vec = new THREE.Vector3();\n      var transform = new THREE.Matrix4();\n\n      // Precompute randomized initial positions (array of Vector3)\n      var positions = _toConsumableArray(Array(10000)).map(function (_, i) {\n        var position = new THREE.Vector3();\n        // Place in a grid\n        position.x = i % 100 - 50;\n        position.y = Math.floor(i / 100) - 50;\n\n        // Offset every other column (hexagonal pattern)\n        position.y += i % 2 * 0.5;\n\n        // Add some noise\n        position.x += Math.random() * 0.3;\n        position.y += Math.random() * 0.3;\n        return position;\n      });\n\n      // Precompute initial distances with octagonal offset\n      var right = new THREE.Vector3(1, 0, 0);\n      var distances = positions.map(function (pos) {\n        // See https://www.desmos.com/calculator/4eiqbvjdzm\n        return pos.length() + Math.cos(pos.angleTo(right) * 8) * 0.5;\n      });\n      return {\n        vec: vec,\n        transform: transform,\n        positions: positions,\n        distances: distances\n      };\n    }, []),\n    vec = _useMemo.vec,\n    transform = _useMemo.transform,\n    positions = _useMemo.positions,\n    distances = _useMemo.distances;\n  useFrame(function (_ref) {\n    var clock = _ref.clock;\n    for (var i = 0; i < 10000; ++i) {\n      var dist = distances[i];\n\n      // Distance affects the wave phase\n      var t = clock.elapsedTime - dist / 25;\n\n      // Oscillates between -0.4 and +0.4 with period of 3.8 seconds\n      var wave = roundedSquareWave(t, 0.15 + 0.2 * dist / 72, 0.4, 1 / 3.8);\n\n      // Scale initial position by our oscillator\n      vec.copy(positions[i]).multiplyScalar(wave + 1.3);\n\n      // Apply the Vector3 position to the Matrix4\n      transform.setPosition(vec);\n\n      // Update Matrix4 for this instance\n      ref.current.setMatrixAt(i, transform);\n    }\n    ref.current.instanceMatrix.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"instancedMesh\", {\n    ref: ref,\n    args: [null, null, 10000],\n    children: [/*#__PURE__*/_jsxDEV(\"circleBufferGeometry\", {\n      args: [0.15]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Dots, \"TbyJAnA0WBrw7EYfMNxPansTfXY=\", false, function () {\n  return [useFrame];\n});\n_c = Dots;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    orthographic: true,\n    camera: {\n      zoom: 20\n    },\n    colorManagement: false // Disabling colorManagement gives us raw colors (pure whites)\n    ,\n    resize: {\n      polyfill: ResizeObserver\n    } // Allows @react-spring/three to work in Safari\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['black']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Effects, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dots, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dots\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useMemo","useRef","Canvas","useFrame","Effects","ResizeObserver","THREE","jsxDEV","_jsxDEV","roundedSquareWave","t","delta","a","f","Math","PI","atan","sin","Dots","_s","ref","_useMemo","vec","Vector3","transform","Matrix4","positions","_toConsumableArray","Array","map","_","i","position","x","y","floor","random","right","distances","pos","length","cos","angleTo","_ref","clock","dist","elapsedTime","wave","copy","multiplyScalar","setPosition","current","setMatrixAt","instanceMatrix","needsUpdate","args","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","orthographic","camera","zoom","colorManagement","resize","polyfill","attach","_c2","$RefreshReg$"],"sources":["/Users/jphenessey/code/minisite/src/demos/Demo1.js"],"sourcesContent":["import React, { useMemo, useRef } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { Effects } from './Effects'\nimport { ResizeObserver } from '@juggle/resize-observer'\nimport * as THREE from 'three'\n\n// NON-INTERACTIVE VERSION\n\n// Equation from https://dsp.stackexchange.com/a/56529\n// Visualized here https://www.desmos.com/calculator/uakymahh4u\nconst roundedSquareWave = (t, delta, a, f) => {\n  return ((2 * a) / Math.PI) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta)\n}\n\nfunction Dots() {\n  const ref = useRef() // Reference to our InstancedMesh\n  const { vec, transform, positions, distances } = useMemo(() => {\n    // Variables for intermediary calculations\n    const vec = new THREE.Vector3()\n    const transform = new THREE.Matrix4()\n\n    // Precompute randomized initial positions (array of Vector3)\n    const positions = [...Array(10000)].map((_, i) => {\n      const position = new THREE.Vector3()\n      // Place in a grid\n      position.x = (i % 100) - 50\n      position.y = Math.floor(i / 100) - 50\n\n      // Offset every other column (hexagonal pattern)\n      position.y += (i % 2) * 0.5\n\n      // Add some noise\n      position.x += Math.random() * 0.3\n      position.y += Math.random() * 0.3\n      return position\n    })\n\n    // Precompute initial distances with octagonal offset\n    const right = new THREE.Vector3(1, 0, 0)\n    const distances = positions.map((pos) => {\n      // See https://www.desmos.com/calculator/4eiqbvjdzm\n      return pos.length() + Math.cos(pos.angleTo(right) * 8) * 0.5\n    })\n    return { vec, transform, positions, distances }\n  }, [])\n  useFrame(({ clock }) => {\n    for (let i = 0; i < 10000; ++i) {\n      const dist = distances[i]\n\n      // Distance affects the wave phase\n      const t = clock.elapsedTime - dist / 25\n\n      // Oscillates between -0.4 and +0.4 with period of 3.8 seconds\n      const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1 / 3.8)\n\n      // Scale initial position by our oscillator\n      vec.copy(positions[i]).multiplyScalar(wave + 1.3)\n\n      // Apply the Vector3 position to the Matrix4\n      transform.setPosition(vec)\n\n      // Update Matrix4 for this instance\n      ref.current.setMatrixAt(i, transform)\n    }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n  return (\n    <instancedMesh ref={ref} args={[null, null, 10000]}>\n      <circleBufferGeometry args={[0.15]} /> {/* Circle with radius of 0.15 */}\n      <meshBasicMaterial /> {/* Default to white color */}\n    </instancedMesh>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas\n      orthographic\n      camera={{ zoom: 20 }}\n      colorManagement={false} // Disabling colorManagement gives us raw colors (pure whites)\n      resize={{ polyfill: ResizeObserver }} // Allows @react-spring/three to work in Safari\n    >\n      <color attach=\"background\" args={['black']} />\n      <Effects />\n      <Dots />\n    </Canvas>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
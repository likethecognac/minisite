{"ast":null,"code":"import _slicedToArray from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"ticksSpring\", \"clickSpring\", \"duration\"];\nvar _jsxFileName = \"/Users/jphenessey/code/minisite/src/demos/Demo2.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useMemo, useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { Effects } from './Effects';\nimport { useSpring } from '@react-spring/three';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport * as THREE from 'three';\n\n// INTERACTIVE VERSION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar roundedSquareWave = function roundedSquareWave(t) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.1;\n  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / 10;\n  // Equation from https://dsp.stackexchange.com/a/56529\n  // Visualized here https://www.desmos.com/calculator/uakymahh4u\n  return 2 * a / Math.PI * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\nfunction Dots(_ref) {\n  _s();\n  var ticksSpring = _ref.ticksSpring,\n    clickSpring = _ref.clickSpring,\n    duration = _ref.duration,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var ref = useRef(); // Reference to our InstancedMesh\n  var _useMemo = useMemo(function () {\n      // Variables for intermediary calculations\n      var vec = new THREE.Vector3();\n      var transform = new THREE.Matrix4();\n\n      // Vector pointing to the right (for angle calculations)\n      var right = new THREE.Vector3(1, 0, 0);\n\n      // True cursor position in 3D space\n      var vec3Mouse = new THREE.Vector3();\n\n      // Where the dots are clustered around\n      var focus = new THREE.Vector3();\n\n      // Precompute randomized initial positions (array of Vector3)\n      var positions = _toConsumableArray(Array(10000)).map(function (_, i) {\n        var position = new THREE.Vector3();\n\n        // Place in a grid\n        position.x = i % 100 - 50;\n        position.y = Math.floor(i / 100) - 50;\n\n        // Offset every other column (hexagonal pattern)\n        position.y += i % 2 * 0.5;\n\n        // Add some noise\n        position.x += Math.random() * 0.3;\n        position.y += Math.random() * 0.3;\n        return position;\n      });\n      return {\n        vec: vec,\n        right: right,\n        transform: transform,\n        vec3Mouse: vec3Mouse,\n        focus: focus,\n        positions: positions\n      };\n    }, []),\n    vec = _useMemo.vec,\n    right = _useMemo.right,\n    transform = _useMemo.transform,\n    vec3Mouse = _useMemo.vec3Mouse,\n    focus = _useMemo.focus,\n    positions = _useMemo.positions;\n  useFrame(function (_ref2) {\n    var mouse = _ref2.mouse,\n      viewport = _ref2.viewport;\n    // Convert mouse screen coords to 3D scene coords\n    vec3Mouse.x = mouse.x * viewport.width / 2;\n    vec3Mouse.y = mouse.y * viewport.height / 2;\n    for (var i = 0; i < 10000; ++i) {\n      // Drift focus to center as click is released\n      focus.copy(vec3Mouse).multiplyScalar(clickSpring.get());\n\n      // Vec holds the dot position relative to the focus point\n      vec.copy(positions[i]).sub(focus);\n\n      // Same distance calculation as original demo\n      var dist = vec.length() + Math.cos(vec.angleTo(right) * 8) * 0.5;\n\n      // This adjusts the wave input to set a suitable phase and frequency\n      var t = ticksSpring.get() / 2 + 1 / 2 - dist / 100;\n      var wave = roundedSquareWave(t, 0.15 + 0.2 * dist / 72, 0.4, 1);\n\n      // Scale dot position relative to the focus point\n      vec.multiplyScalar(wave + 1.3).add(focus);\n\n      // Set the instance's transformation matrix\n      transform.setPosition(vec);\n      ref.current.setMatrixAt(i, transform);\n    }\n    ref.current.instanceMatrix.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"instancedMesh\", _objectSpread(_objectSpread({\n    args: [null, null, 10000],\n    ref: ref\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"circleBufferGeometry\", {\n      args: [0.15, 8]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: 'white'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Dots, \"qWLockVdUviXrp7rVcLOw1OG5gQ=\", false, function () {\n  return [useFrame];\n});\n_c = Dots;\nexport default function App() {\n  _s2();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    ticks = _useState2[0],\n    setTicks = _useState2[1];\n  var _useSpring = useSpring({\n      ticksSpring: ticks,\n      // Springy tick value (each click / release is a tick)\n      clickSpring: ticks % 2 === 1 ? 1 : 0,\n      // Springy click factor (1 means clicked, 0 means released)\n      config: {\n        tension: 20,\n        friction: 20,\n        clamp: true\n      }\n    }),\n    ticksSpring = _useSpring.ticksSpring,\n    clickSpring = _useSpring.clickSpring;\n  var bind = {\n    onPointerDown: function onPointerDown(e) {\n      // Capture the pointer so it's still tracked outside the window\n      e.target.setPointerCapture(e.pointerId);\n      setTicks(ticks + 1);\n    },\n    onPointerUp: function onPointerUp() {\n      // Prevent misfires\n      if (ticks % 2 === 1) {\n        // Only finish the animation if held down for long enough\n        if (clickSpring.get() > 0.5) setTicks(ticks + 1);\n        // Otherwise undo the contraction (this way you can't speed up the animation by spam clicking)\n        else setTicks(ticks - 1);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Canvas, _objectSpread(_objectSpread({\n    orthographic: true,\n    colorManagement: false,\n    camera: {\n      position: [0, 0, 100],\n      zoom: 20\n    },\n    resize: {\n      polyfill: ResizeObserver\n    } // Allows @react-spring/three to work in Safari\n  }, bind), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['black']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dots, {\n      ticksSpring: ticksSpring,\n      clickSpring: clickSpring,\n      duration: 3.8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Effects, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"AXSAfQV8fhBq4Cmu5UKqXgtCNHs=\", false, function () {\n  return [useSpring];\n});\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dots\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useMemo","useRef","useState","Canvas","useFrame","Effects","useSpring","ResizeObserver","THREE","jsxDEV","_jsxDEV","roundedSquareWave","t","delta","arguments","length","undefined","a","f","Math","PI","atan","sin","Dots","_ref","_s","ticksSpring","clickSpring","duration","props","_objectWithoutProperties","_excluded","ref","_useMemo","vec","Vector3","transform","Matrix4","right","vec3Mouse","focus","positions","_toConsumableArray","Array","map","_","i","position","x","y","floor","random","_ref2","mouse","viewport","width","height","copy","multiplyScalar","get","sub","dist","cos","angleTo","wave","add","setPosition","current","setMatrixAt","instanceMatrix","needsUpdate","_objectSpread","args","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","App","_s2","_useState","_useState2","_slicedToArray","ticks","setTicks","_useSpring","config","tension","friction","clamp","bind","onPointerDown","e","target","setPointerCapture","pointerId","onPointerUp","orthographic","colorManagement","camera","zoom","resize","polyfill","attach","_c2","$RefreshReg$"],"sources":["/Users/jphenessey/code/minisite/src/demos/Demo2.js"],"sourcesContent":["import React, { useMemo, useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { Effects } from './Effects'\nimport { useSpring } from '@react-spring/three'\nimport { ResizeObserver } from '@juggle/resize-observer'\nimport * as THREE from 'three'\n\n// INTERACTIVE VERSION\n\nconst roundedSquareWave = (t, delta = 0.1, a = 1, f = 1 / 10) => {\n  // Equation from https://dsp.stackexchange.com/a/56529\n  // Visualized here https://www.desmos.com/calculator/uakymahh4u\n  return ((2 * a) / Math.PI) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta)\n}\n\nfunction Dots({ ticksSpring, clickSpring, duration, ...props }) {\n  const ref = useRef() // Reference to our InstancedMesh\n  const { vec, right, transform, vec3Mouse, focus, positions } = useMemo(() => {\n    // Variables for intermediary calculations\n    const vec = new THREE.Vector3()\n    const transform = new THREE.Matrix4()\n\n    // Vector pointing to the right (for angle calculations)\n    const right = new THREE.Vector3(1, 0, 0)\n\n    // True cursor position in 3D space\n    const vec3Mouse = new THREE.Vector3()\n\n    // Where the dots are clustered around\n    const focus = new THREE.Vector3()\n\n    // Precompute randomized initial positions (array of Vector3)\n    const positions = [...Array(10000)].map((_, i) => {\n      const position = new THREE.Vector3()\n\n      // Place in a grid\n      position.x = (i % 100) - 50\n      position.y = Math.floor(i / 100) - 50\n\n      // Offset every other column (hexagonal pattern)\n      position.y += (i % 2) * 0.5\n\n      // Add some noise\n      position.x += Math.random() * 0.3\n      position.y += Math.random() * 0.3\n      return position\n    })\n    return { vec, right, transform, vec3Mouse, focus, positions }\n  }, [])\n  useFrame(({ mouse, viewport }) => {\n    // Convert mouse screen coords to 3D scene coords\n    vec3Mouse.x = (mouse.x * viewport.width) / 2\n    vec3Mouse.y = (mouse.y * viewport.height) / 2\n\n    for (let i = 0; i < 10000; ++i) {\n      // Drift focus to center as click is released\n      focus.copy(vec3Mouse).multiplyScalar(clickSpring.get())\n\n      // Vec holds the dot position relative to the focus point\n      vec.copy(positions[i]).sub(focus)\n\n      // Same distance calculation as original demo\n      const dist = vec.length() + Math.cos(vec.angleTo(right) * 8) * 0.5\n\n      // This adjusts the wave input to set a suitable phase and frequency\n      const t = ticksSpring.get() / 2 + 1 / 2 - dist / 100\n      const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1)\n\n      // Scale dot position relative to the focus point\n      vec.multiplyScalar(wave + 1.3).add(focus)\n\n      // Set the instance's transformation matrix\n      transform.setPosition(vec)\n      ref.current.setMatrixAt(i, transform)\n    }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n  return (\n    <instancedMesh args={[null, null, 10000]} ref={ref} {...props}>\n      <circleBufferGeometry args={[0.15, 8]} />\n      <meshBasicMaterial color={'white'} />\n    </instancedMesh>\n  )\n}\n\nexport default function App() {\n  const [ticks, setTicks] = useState(0)\n  const { ticksSpring, clickSpring } = useSpring({\n    ticksSpring: ticks, // Springy tick value (each click / release is a tick)\n    clickSpring: ticks % 2 === 1 ? 1 : 0, // Springy click factor (1 means clicked, 0 means released)\n    config: { tension: 20, friction: 20, clamp: true }\n  })\n  const bind = {\n    onPointerDown: (e) => {\n      // Capture the pointer so it's still tracked outside the window\n      e.target.setPointerCapture(e.pointerId)\n      setTicks(ticks + 1)\n    },\n    onPointerUp: () => {\n      // Prevent misfires\n      if (ticks % 2 === 1) {\n        // Only finish the animation if held down for long enough\n        if (clickSpring.get() > 0.5) setTicks(ticks + 1)\n        // Otherwise undo the contraction (this way you can't speed up the animation by spam clicking)\n        else setTicks(ticks - 1)\n      }\n    }\n  }\n  return (\n    <Canvas\n      orthographic\n      colorManagement={false}\n      camera={{ position: [0, 0, 100], zoom: 20 }}\n      resize={{ polyfill: ResizeObserver }}  // Allows @react-spring/three to work in Safari\n      {...bind}\n    >\n      <color attach=\"background\" args={['black']} />\n      <Dots ticksSpring={ticksSpring} clickSpring={clickSpring} duration={3.8} />\n      <Effects />\n    </Canvas>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"/Users/jphenessey/code/minisite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useMemo,useRef}from'react';import{Canvas,useFrame}from'react-three-fiber';import{Effects}from'./Effects';import{ResizeObserver}from'@juggle/resize-observer';import*as THREE from'three';// NON-INTERACTIVE VERSION\n// Equation from https://dsp.stackexchange.com/a/56529\n// Visualized here https://www.desmos.com/calculator/uakymahh4u\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var roundedSquareWave=function roundedSquareWave(t,delta,a,f){return 2*a/Math.PI*Math.atan(Math.sin(2*Math.PI*t*f)/delta);};function Dots(){var ref=useRef();// Reference to our InstancedMesh\nvar _useMemo=useMemo(function(){// Variables for intermediary calculations\nvar vec=new THREE.Vector3();var transform=new THREE.Matrix4();// Precompute randomized initial positions (array of Vector3)\nvar positions=_toConsumableArray(Array(10000)).map(function(_,i){var position=new THREE.Vector3();// Place in a grid\nposition.x=i%100-50;position.y=Math.floor(i/100)-50;// Offset every other column (hexagonal pattern)\nposition.y+=i%2*0.5;// Add some noise\nposition.x+=Math.random()*0.3;position.y+=Math.random()*0.3;return position;});// Precompute initial distances with octagonal offset\nvar right=new THREE.Vector3(1,0,0);var distances=positions.map(function(pos){// See https://www.desmos.com/calculator/4eiqbvjdzm\nreturn pos.length()+Math.cos(pos.angleTo(right)*8)*0.5;});return{vec:vec,transform:transform,positions:positions,distances:distances};},[]),vec=_useMemo.vec,transform=_useMemo.transform,positions=_useMemo.positions,distances=_useMemo.distances;useFrame(function(_ref){var clock=_ref.clock;for(var i=0;i<10000;++i){var dist=distances[i];// Distance affects the wave phase\nvar t=clock.elapsedTime-dist/25;// Oscillates between -0.4 and +0.4 with period of 3.8 seconds\nvar wave=roundedSquareWave(t,0.15+0.2*dist/72,0.4,1/3.8);// Scale initial position by our oscillator\nvec.copy(positions[i]).multiplyScalar(wave+1.3);// Apply the Vector3 position to the Matrix4\ntransform.setPosition(vec);// Update Matrix4 for this instance\nref.current.setMatrixAt(i,transform);}ref.current.instanceMatrix.needsUpdate=true;});return/*#__PURE__*/_jsxs(\"instancedMesh\",{ref:ref,args:[null,null,10000],children:[/*#__PURE__*/_jsx(\"circleBufferGeometry\",{args:[0.15]}),\" \",/*#__PURE__*/_jsx(\"meshBasicMaterial\",{}),\" \"]});}export default function App(){return/*#__PURE__*/_jsxs(Canvas,{orthographic:true,camera:{zoom:20},colorManagement:false// Disabling colorManagement gives us raw colors (pure whites)\n,resize:{polyfill:ResizeObserver}// Allows @react-spring/three to work in Safari\n,children:[/*#__PURE__*/_jsx(\"color\",{attach:\"background\",args:['black']}),/*#__PURE__*/_jsx(Effects,{}),/*#__PURE__*/_jsx(Dots,{})]});}","map":{"version":3,"names":["React","useMemo","useRef","Canvas","useFrame","Effects","ResizeObserver","THREE","jsx","_jsx","jsxs","_jsxs","roundedSquareWave","t","delta","a","f","Math","PI","atan","sin","Dots","ref","_useMemo","vec","Vector3","transform","Matrix4","positions","_toConsumableArray","Array","map","_","i","position","x","y","floor","random","right","distances","pos","length","cos","angleTo","_ref","clock","dist","elapsedTime","wave","copy","multiplyScalar","setPosition","current","setMatrixAt","instanceMatrix","needsUpdate","args","children","App","orthographic","camera","zoom","colorManagement","resize","polyfill","attach"],"sources":["/Users/jphenessey/code/minisite/src/demos/Demo1.js"],"sourcesContent":["import React, { useMemo, useRef } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { Effects } from './Effects'\nimport { ResizeObserver } from '@juggle/resize-observer'\nimport * as THREE from 'three'\n\n// NON-INTERACTIVE VERSION\n\n// Equation from https://dsp.stackexchange.com/a/56529\n// Visualized here https://www.desmos.com/calculator/uakymahh4u\nconst roundedSquareWave = (t, delta, a, f) => {\n  return ((2 * a) / Math.PI) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta)\n}\n\nfunction Dots() {\n  const ref = useRef() // Reference to our InstancedMesh\n  const { vec, transform, positions, distances } = useMemo(() => {\n    // Variables for intermediary calculations\n    const vec = new THREE.Vector3()\n    const transform = new THREE.Matrix4()\n\n    // Precompute randomized initial positions (array of Vector3)\n    const positions = [...Array(10000)].map((_, i) => {\n      const position = new THREE.Vector3()\n      // Place in a grid\n      position.x = (i % 100) - 50\n      position.y = Math.floor(i / 100) - 50\n\n      // Offset every other column (hexagonal pattern)\n      position.y += (i % 2) * 0.5\n\n      // Add some noise\n      position.x += Math.random() * 0.3\n      position.y += Math.random() * 0.3\n      return position\n    })\n\n    // Precompute initial distances with octagonal offset\n    const right = new THREE.Vector3(1, 0, 0)\n    const distances = positions.map((pos) => {\n      // See https://www.desmos.com/calculator/4eiqbvjdzm\n      return pos.length() + Math.cos(pos.angleTo(right) * 8) * 0.5\n    })\n    return { vec, transform, positions, distances }\n  }, [])\n  useFrame(({ clock }) => {\n    for (let i = 0; i < 10000; ++i) {\n      const dist = distances[i]\n\n      // Distance affects the wave phase\n      const t = clock.elapsedTime - dist / 25\n\n      // Oscillates between -0.4 and +0.4 with period of 3.8 seconds\n      const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1 / 3.8)\n\n      // Scale initial position by our oscillator\n      vec.copy(positions[i]).multiplyScalar(wave + 1.3)\n\n      // Apply the Vector3 position to the Matrix4\n      transform.setPosition(vec)\n\n      // Update Matrix4 for this instance\n      ref.current.setMatrixAt(i, transform)\n    }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n  return (\n    <instancedMesh ref={ref} args={[null, null, 10000]}>\n      <circleBufferGeometry args={[0.15]} /> {/* Circle with radius of 0.15 */}\n      <meshBasicMaterial /> {/* Default to white color */}\n    </instancedMesh>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas\n      orthographic\n      camera={{ zoom: 20 }}\n      colorManagement={false} // Disabling colorManagement gives us raw colors (pure whites)\n      resize={{ polyfill: ResizeObserver }} // Allows @react-spring/three to work in Safari\n    >\n      <color attach=\"background\" args={['black']} />\n      <Effects />\n      <Dots />\n    </Canvas>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}